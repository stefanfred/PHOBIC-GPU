#version 450

layout(local_size_x_id = 0, local_size_y = 1, local_size_z = 1) in;

// Push constant
layout(push_constant) uniform PushStruct {
    uint size;
    uint partitionCount;
    uint bucketCount;
} p;


#include "key_mapping.glsl"
#include "constants.glsl"

layout(binding = 0) buffer keysB {Key keys[];};
layout(binding = 1) buffer offsetsB {uint offsets[];};
layout(binding = 2) buffer counterB {uint counters[];};
layout(binding = 3) buffer debugB {uint debug[];};


void main() {
    uint gID = gl_GlobalInvocationID.x;
	uint wSize = gl_WorkGroupSize.x;
	uint wID = gl_WorkGroupID.x;
	uint lID = gl_LocalInvocationID.x;
	uint index = wID * wSize * 4 + lID;

	uint offset = 0;
	for(uint i=0; i<4; i++) {
		offset = offset<<8;
		if(index < p.size) {
			uint o = atomicAdd(counters[assignBucketAbsolute(keys[index].partitioner, keys[index].bucketer, p.partitionCount, p.bucketCount)], 1);
			offset = offset | o;
		}
		index += wSize;
	}
	offsets[gID] = offset;
}